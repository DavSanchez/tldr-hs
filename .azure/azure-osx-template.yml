jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack-def:
        BUILD: stack
        STACK_YAML: stack.yaml
    maxParallel: 2
  steps:
  - bash: echo "##vso[task.setvariable variable=TAG]${BUILD_SOURCEBRANCH##refs/tags/}"
    displayName: Set TAG variable
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/')
  - script: |
      brew install gcc
      export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      mkdir -p ~/.local/bin
      curl -skL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin;
      export PATH=$HOME/.local/bin:$PATH
      stack --install-ghc $ARGS test --bench --only-dependencies
      stack $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Installation ${{parameters.os}} & Test'
  - bash: ./.azure/build_release.sh
    displayName: Build Release
  - task: ArchiveFiles@2
    inputs:
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: $(Build.ArtifactStagingDirectory)/tldr-osx-$(TAG).tar.gz
      verbose: true
    condition: startsWith(variables['TAG'], 'v')
  - task: GithubRelease@0
    displayName: Create GitHub Release
    inputs:
      githubConnection: github.com_psibi
      assets: $(Build.ArtifactStagingDirectory)/tldr-osx-$(TAG).tar.gz
      assetUploadMode: replace
      action: edit
      tag: $(TAG)
    condition: startsWith(variables['TAG'], 'v')
